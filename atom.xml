<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>红尘漫步</title>
  <subtitle>爱吃鱼的小强</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-08-17T06:23:40.940Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Justin Zhou</name>
    <email>13912926126@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>EdgeCast FTP Upload文件size变小问题的解决</title>
    <link href="http://yoursite.com/2016/08/17/EdgeCast%20FTP%20Upload%E6%96%87%E4%BB%B6size%E5%8F%98%E5%B0%8F%E9%97%AE%E9%A2%98%E7%9A%84%E8%A7%A3%E5%86%B3/"/>
    <id>http://yoursite.com/2016/08/17/EdgeCast FTP Upload文件size变小问题的解决/</id>
    <published>2016-08-17T05:49:03.038Z</published>
    <updated>2016-08-17T06:23:40.940Z</updated>
    
    <content type="html"><![CDATA[<p>最近在做EdgeCast CDN的评估，包括file的upload以及purge功能。因为之前有已经实现的ftp的组件，并且在实际生产中用于Akamai CDN的文件上传，未出现什么问题。然而，应用这个组件上传文件到edgecast的ftp上时发现文件竟然变小了！<br><a id="more"></a><br>起初我怀疑是edgecast ftp的问题，于是我就试着用现有的ftp软件8uftp去上传，发现不存在文件变小的问题。那么可能是我们代码的问题，可是奇怪的是为什么对于akamai的ftp就没有问题呢。此时我想到了用wireshark来捕捉ftp网络数据。<br><img src="/img/capture1.png" alt="有问题的抓包"><br>图中上面部分的是akamai的ftp传输过程，下面部分是edgecast的ftp传输过程。仔细比较可发现，akamai ftp对于STOR命令的response是“150 Opening BINARY mode data connection for xxx.7z”，而edgecast ftp对于STOR命令的response是”150 Accepted data connection”。所以akamai ftp默认的传输模式就是binary，而edgecast ftp的默认传输模式是ascii。于是在代码里STOR之前指定传输模式为binary，问题就解决了。附上修改之后的网络数据包。<br><img src="/img/capture2.png" alt="修改过后没问题的抓包"></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;最近在做EdgeCast CDN的评估，包括file的upload以及purge功能。因为之前有已经实现的ftp的组件，并且在实际生产中用于Akamai CDN的文件上传，未出现什么问题。然而，应用这个组件上传文件到edgecast的ftp上时发现文件竟然变小了！&lt;br&gt;
    
    </summary>
    
    
      <category term="EdgeCast, FTP" scheme="http://yoursite.com/tags/EdgeCast-FTP/"/>
    
  </entry>
  
  <entry>
    <title>Akamai CCU V3 Fast Purge</title>
    <link href="http://yoursite.com/2016/08/17/Akamai%20CCU%20V3%20Fast%20Purge/"/>
    <id>http://yoursite.com/2016/08/17/Akamai CCU V3 Fast Purge/</id>
    <published>2016-08-17T02:19:34.004Z</published>
    <updated>2016-08-17T06:23:54.202Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Concept"><a href="#Concept" class="headerlink" title="Concept"></a>Concept</h2><p>Akamai是著名的CDN内容提供商。它提供了一套purge的API用于清空Edge Server上的缓存，使客户可以拿到最新的内容。目前在用的是CCU OPEN V2 API，主要是基于XML或JASON的一套REST API。通过调用它，会将相应的purge请求加入一个队列中，同时它也提供了query status的API用于查询purge请求的状态。一般情况下，从提交请求到请求执行完成需要4-7min。<br>这里想要介绍的是Akamai那边提供的V3版本的API，目前处于Beta阶段。最大的卖点就是Fast Purge - Featuring 5-second purge。<br><a id="more"></a></p>
<ul>
<li>Purge utility is Fast Purge, if enabled on the account (estimated time is approximately five seconds). If Fast Purge is not properly enabled on the account, the purge is processed using the legacy (v2) CCU version (estimated time is approximately 4–7 minutes).*</li>
<li>Purges are processed instantaneously - there is no longer a notion of a queue, neither “default” nor “emergency”.*</li>
<li>You can add objects to a total of 50K per request.*</li>
<li>You can choose to “invalidate” or “delete”.*</li>
<li>“production” and “staging” can be purged as separate commands.  This is detailed further down in this post.*</li>
<li>The V3 code will work even before the fast purge is turned on for your properties, so you can implement the code and turn on the functionality as soon as it’s ready.  These calls will be redirected to the V2 OPEN API on the back end.*</li>
</ul>
<h2 id="Usage"><a href="#Usage" class="headerlink" title="Usage"></a>Usage</h2><h3 id="Authorize-client"><a href="#Authorize-client" class="headerlink" title="Authorize client"></a>Authorize client</h3><p>OPEN API clients interact with the Akamai Intelligent Platform™ by signing each API request with credentials that are created specifically for each OPEN API client. The scope of the authorization is managed by you. These credentials are analogous to other types of system private data, such as ssh keys, and should be treated with the same care.<br>The authorization to call an API is managed in the Akamai Luna Control Center; however, not every Luna Control Center user will have permissions to create API authorizations. In order to manage API credentials, a user must have the Admin role in the context (account level or group level) the credentials will be tied to. Different organizations choose to grant this privilege to different classes of users. If you don’t see the Manage APIs menu item in the instructions below, then you may not have permission to manage API authorizations. If you find this to be the case, please consult your local administrator. They can either create the authorization you will need for this exercise, or they may grant you the permission to create API authorizations as appropriate to your organization.<br><strong>steps</strong></p>
<ol>
<li>Create an API client</li>
<li>Grant that client permission to call the API we are working with</li>
<li>Save our work to the Akamai Intelligent Platform</li>
<li>Download the authentication tokens so the local API client can use them to sign the API requests (client-api-kickstart.txt: contains Base URL, Access Tokens, Client token, and Secret)</li>
</ol>
<hr>
<h3 id="CCU-request"><a href="#CCU-request" class="headerlink" title="CCU request"></a>CCU request</h3><p>Purge methods (Invalidate or Delete by URL) currently available with this API by task type, as well as an estimated completion time, are as follows:</p>
<table>
<thead>
<tr>
<th style="text-align:left"><em>Action</em></th>
<th style="text-align:left"><em>Operation</em></th>
<th style="text-align:left"><em>API EndPoint</em></th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Invalidate by URL</td>
<td style="text-align:left">POST</td>
<td style="text-align:left">/ccu/v3/invalidate/url/{network}</td>
</tr>
<tr>
<td style="text-align:left">Delete by URL</td>
<td style="text-align:left">POST</td>
<td style="text-align:left">/ccu/v3/delete/url/{network}</td>
</tr>
</tbody>
</table>
<p><strong>Invalidate by URL</strong><br>Request:<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">POST  <span class="meta-keyword">/ccu/</span>v3<span class="meta-keyword">/invalidate/</span>url/production</div><div class="line">Content-Type: application/<span class="class">json</span></div><div class="line">&#123;</div><div class="line">    <span class="string">"objects"</span>: [</div><div class="line">        <span class="string">"http://www.example.com/graphics/picture.gif"</span>,</div><div class="line">        <span class="string">"http://www.site-example.com/graphics/picture.gif"</span>,</div><div class="line">        <span class="string">"http://www.example1.com/documents/brochure.pdf"</span> </div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Response：<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"httpStatus"</span>: <span class="number">201</span>,</div><div class="line">    <span class="attr">"detail"</span>: <span class="string">"Request accepted."</span>,</div><div class="line">    <span class="attr">"estimatedSeconds"</span>: <span class="number">5</span>,</div><div class="line">    <span class="attr">"purgeId"</span>: <span class="string">"043f-4af0-843f-aaf0043faaf0"</span>,</div><div class="line">    <span class="attr">"supportId"</span>: <span class="string">"17PY1321286429616716-211907680"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p><strong>Delete by URL</strong><br>Request:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">POST  /ccu/v3/<span class="keyword">delete</span>/<span class="keyword">url</span>/production</div><div class="line"><span class="keyword">Content</span>-<span class="keyword">Type</span>: application/<span class="keyword">json</span></div><div class="line">&#123;</div><div class="line">    <span class="string">"objects"</span>: [</div><div class="line">        <span class="string">"http://www.example.com/graphics/picture.gif"</span>,</div><div class="line">        <span class="string">"http://www.site-example.com/graphics/picture.gif"</span>,</div><div class="line">        <span class="string">"http://www.example1.com/documents/brochure.pdf"</span></div><div class="line">    ]</div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<p>Response:<br><figure class="highlight json"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">&#123;</div><div class="line">    <span class="attr">"httpStatus"</span>: <span class="number">201</span>,</div><div class="line">    <span class="attr">"detail"</span>: <span class="string">"Request accepted."</span>,</div><div class="line">    <span class="attr">"estimatedSeconds"</span>: <span class="number">5</span>,</div><div class="line">    <span class="attr">"purgeId"</span>: <span class="string">"043f-4af0-843f-aaf0043faaf0"</span>,</div><div class="line">    <span class="attr">"supportId"</span>: <span class="string">"17PY1321286429616716-211907680"</span></div><div class="line">&#125;</div></pre></td></tr></table></figure></p>
<hr>
<h3 id="Signing-API-request"><a href="#Signing-API-request" class="headerlink" title="Signing API request"></a>Signing API request</h3><p>The signature is the base64-encoding of the SHA–256 HMAC of the data to sign with the signing key.<br>You can get an <a href="https://github.com/akamai-open" target="_blank" rel="external">EdgeGrid Request Signature Module</a>.</p>
<h4 id="Signing-Key"><a href="#Signing-Key" class="headerlink" title="Signing Key"></a>Signing Key</h4><p>The signing key is derived from the client secret. The signing key is computed as the base64 encoding of the SHA–256 HMAC of the timestamp string (the field value included in the HTTP authorization header described above) with the client secret as the key.<br><img src="/img/CCU_V3_WorkFlow.jpg" alt="Akamai CCU V3 WorkFlow"></p>
<h4 id="Example-Data-to-Sign"><a href="#Example-Data-to-Sign" class="headerlink" title="Example Data to Sign"></a>Example Data to Sign</h4><p>Raw CCU v3 request:<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/diagnostic-tools/<span class="built_in">v1</span>/locations</div></pre></td></tr></table></figure></p>
<p>the data to sign looks like this (\t represents a tab, line breaks added for readability):<br><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">GET<span class="symbol">\t</span>https<span class="symbol">\t</span>akaa-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx.luna.akamaiapis.net<span class="symbol">\t</span></div><div class="line">/diagnostic-tools/v1/locations<span class="symbol">\t</span><span class="symbol">\t</span><span class="symbol">\t</span>EG1-HMAC-SHA256</div><div class="line">client_token=akab-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx;</div><div class="line">access_token=akab-xxxxxxxxxxxxxxxx-xxxxxxxxxxxxxxxx;</div><div class="line">timestamp=20140402T18:05:06+0000;</div><div class="line">nonce=185f94eb-537c-4c01-b8cc-2fa5a06aee7f;</div></pre></td></tr></table></figure></p>
<h3 id="More-information"><a href="#More-information" class="headerlink" title="More information"></a>More information</h3><p><a href="https://developer.akamai.com/api/purge/ccu/overview.html" target="_blank" rel="external">https://developer.akamai.com/api/purge/ccu/overview.html</a><br><a href="https://developer.akamai.com/introduction/Client_Auth.html" target="_blank" rel="external">https://developer.akamai.com/introduction/Client_Auth.html</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Concept&quot;&gt;&lt;a href=&quot;#Concept&quot; class=&quot;headerlink&quot; title=&quot;Concept&quot;&gt;&lt;/a&gt;Concept&lt;/h2&gt;&lt;p&gt;Akamai是著名的CDN内容提供商。它提供了一套purge的API用于清空Edge Server上的缓存，使客户可以拿到最新的内容。目前在用的是CCU OPEN V2 API，主要是基于XML或JASON的一套REST API。通过调用它，会将相应的purge请求加入一个队列中，同时它也提供了query status的API用于查询purge请求的状态。一般情况下，从提交请求到请求执行完成需要4-7min。&lt;br&gt;这里想要介绍的是Akamai那边提供的V3版本的API，目前处于Beta阶段。最大的卖点就是Fast Purge - Featuring 5-second purge。&lt;br&gt;
    
    </summary>
    
    
      <category term="Akamai,Fast Purge" scheme="http://yoursite.com/tags/Akamai-Fast-Purge/"/>
    
  </entry>
  
</feed>
